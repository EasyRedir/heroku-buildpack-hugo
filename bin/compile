#!/bin/sh
# bin/compile <build-dir> <cache-dir>
set -e

# Used to format the output based on heroku guidelines
# https://devcenter.heroku.com/articles/buildpack-api#style
indent() {
  RE="s/^/       /"
  sed $SED_FLAG "$RE"
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Import the environment
export_env_dir() {
  local env_dir=$ENV_DIR
  if [ -d "$env_dir" ]; then
    local whitelist_regex=${2:-''}
    local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|LANG)$'}
    if [ -d "$env_dir" ]; then
      for e in $(ls $env_dir); do
        echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
        export "$e=$(cat $env_dir/$e)"
        :
      done
    fi
  fi
}
export_env_dir

# Hugo version
VERSION="0.17"

# Hugo URL ( download from GH builds )
ARCHIVE_NAME=hugo_${VERSION}_Linux-64bit
FILE_NAME=${ARCHIVE_NAME}.tar.gz
HUGO_PACKAGE=https://github.com/spf13/hugo/releases/download/v${VERSION}/${FILE_NAME}

# Store the hugo package in the cache_dir ( persistent across builds )
mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "\n-----> Fetching Hugo ${VERSION} binaries at ${HUGO_PACKAGE}"
  curl $HUGO_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME | indent
fi

# Extract the binary in the working directory
echo "\n-----> Extracting Hugo ${VERSION} binaries to ${BUILD_DIR}/vendor/hugo"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME | indent
tar -xvzf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR/$ARCHIVE_NAME | indent
mv $CACHE_DIR/$ARCHIVE_NAME/hugo_${VERSION}_linux_amd64/hugo_${VERSION}_linux_amd64 $BUILD_DIR/hugo | indent

# Fetch a theme specified in the .hugotheme file
if [ -e $BUILD_DIR/.hugotheme ]; then
  echo "\n-----> Getting the theme"
  THEME_URL="`cat $BUILD_DIR/.hugotheme`"
  rm -rf $BUILD_DIR/themes && mkdir $BUILD_DIR/themes && cd $BUILD_DIR/themes
  git clone $THEME_URL
fi

# Build the site
echo "\n-----> Building the site"
cd $BUILD_DIR
mkdir -p static | indent
./hugo | indent
